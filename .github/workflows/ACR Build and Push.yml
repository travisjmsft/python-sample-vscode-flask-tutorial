name: ACR Build and Push

on: 
  push:
    branches: master
    
env:
  REGISTRY: travisjregistry.azurecr.io
  IMAGE_NAME: myimage
  VAULT_NAME: travisj-kv
  CERT_NAME: travisj-testcert

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.1.0
        
      - 
        name: Login to Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_GITHUB_CREDS }}

      -
        name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZURE_CLIENT_ID_GH }}
          password: ${{ secrets.AZURE_CLIENT_SECRET_GH }}

      -
        name: Install ORAS CLI
        run: | 
          curl -Lo oras.tar.gz https://github.com/oras-project/oras/releases/download/v0.15.0/oras_0.15.0_linux_amd64.tar.gz
          tar -xzf oras.tar.gz 
          mv ./oras /usr/local/bin/

      -
        name: Install Notation CLI
        run: |
          curl -Lo notation.tar.gz https://github.com/notaryproject/notation/releases/download/v0.11.0-alpha.4/notation_0.11.0-alpha.4_linux_amd64.tar.gz
          #curl -Lo notation.tar.gz https://github.com/notaryproject/notation/releases/download/v0.12.0-beta.1.dev.20221106/notation_0.12.0-beta.1.dev.20221106_linux_amd64.tar.gz
          tar -xzf notation.tar.gz
          mv ./notation /usr/local/bin
          
      -
        name: Install Notation AKV Plugin
        run: |
          mkdir -p ~/.config/notation/plugins/azure-kv
          curl -Lo notation-azure-kv.tar.gz https://github.com/Azure/notation-azure-kv/releases/download/v0.4.0-alpha.4/notation-azure-kv_0.4.0-alpha.4_Linux_amd64.tar.gz
          tar -xzf notation-azure-kv.tar.gz -C ~/.config/notation/plugins/azure-kv notation-azure-kv
       
      -
        name: Configure Notation AKV plugin
        run: |
          KEY_ID=$(az keyvault certificate show -n ${{ env.CERT_NAME }} --vault-name ${{ env.VAULT_NAME }} --query 'kid' -o tsv)
          notation key add --name ${{ env.CERT_NAME }} --plugin azure-kv --id $KEY_ID --default

      - 
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.2.1

      - 
        name: Generate metadata for Docker image
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      -
        name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }} 
          tags: ${{ steps.meta.outputs.tags }}
          
      -
        name: Sign Docker image
        run: |
          notation sign --envelope-type cose -u ${{ secrets.AZURE_CLIENT_ID_GH }} -p ${{ secrets.AZURE_CLIENT_SECRET_GH }} ${{ steps.meta.outputs.tags }} 
          oras discover ${{ steps.meta.outputs.tags }} -o tree
      
      - 
        name: Generate SBOM 
        run: |
          curl -Lo sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
          chmod +x ./sbom-tool
          ./sbom-tool generate -BuildDropPath . -BuildComponentPath . -PackageName ${{ github.event.repository.name }} -PackageVersion 1.0.0 -PackageSupplier TravisJCo -NamespaceUriBase https://sbom.travisjco.com -V Verbose

      - 
        name: ORAS Attach SBOM and signature
        run: |
          oras attach ${{ steps.meta.outputs.tags }} _manifest/spdx_2.2/manifest.spdx.json --artifact-type application/spdx+json
          SBOM_DIGEST=$(oras discover ${{ steps.meta.outputs.tags }} -o json --artifact-type application/spdx+json | jq -r ".referrers[0].digest")
          notation sign --envelope-type cose -u ${{ secrets.AZURE_CLIENT_ID_GH }} -p ${{ secrets.AZURE_CLIENT_SECRET_GH }} ${{ steps.meta.outputs.tags }}@$SBOM_DIGEST 
          notation sign --envelope-type cose --local --output _manifest/spdx_2.2/sbom-signature.cose --media-type "application/spdx+json" _manifest/spdx_2.2/manifest.spdx.json

      - 
        name: Publish artifacts and signatures
        uses: actions/upload-artifact@v3.1.1
        with:
          path: |
            _manifest/spdx_2.2/manifest.spdx.json
            _manifest/spdx_2.2/sbom-signature.cose
            


# This step needs to be performed on a Windows machine. 
# i.e., separate job, prepare WinSDK, download the published artifact from prior step
#
#         mkdir -p ~/.config/notation/plugins/azure-kv
#         curl -Lo notation-azure-kv.tar.gz https://github.com/Azure/notation-azure-kv/releases/download/v0.4.0-alpha.4/notation-azure-kv_0.4.0-alpha.4_Linux_amd64.tar.gz
#         tar -xzf notation-azure-kv.tar.gz -C ~/.config/notation/plugins/azure-kv notation-azure-kv
#
#     - 
#       name: Sign files with Azure Code Signing
#       uses: azure/azure-code-signing
#       with:
#         azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }} 
#         azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
#         azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
#         endpoint: https://wus2.codesigning.azure.net/
#         code-signing-account-name: scitt-test-codesigning
#         certificate-profile-name: scitt-test-certificate-profile
#         files-folder: .
#         files-folder-filter: json
#         file-digest: SHA256

