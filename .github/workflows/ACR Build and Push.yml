name: ACR Build and Push

on: 
  push:
    branches: master
    
env:
  REGISTRY: travisjregistry.azurecr.io
  IMAGE_NAME: myimage

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.1.0

      - 
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.2.1

      -
        name: Install ORAS CLI
        run: | 
          curl -Lo oras.tar.gz https://github.com/oras-project/oras/releases/download/v0.15.0/oras_0.15.0_linux_amd64.tar.gz
          tar -xzf oras.tar.gz 
          mv ./oras /usr/local/bin/

      -
        name: Install and configure Notation CLI
        run: |
          curl -Lo notation.tar.gz https://github.com/notaryproject/notation/releases/download/v0.11.0-alpha.4/notation_0.11.0-alpha.4_linux_amd64.tar.gz
          tar -xzf notation.tar.gz
          mv ./notation /usr/local/bin
          
      -
        name: Install and configure Notation AKV Plugin
        run: |
          mkdir -p ~/.config/notation/plugins/azure-kv
          curl -Lo notation-azure-kv.tar.gz https://github.com/Azure/notation-azure-kv/releases/download/v0.4.0-alpha.4/notation-azure-kv_0.4.0-alpha.4_Linux_amd64.tar.gz
          tar -xzf notation-azure-kv.tar.gz -C ~/.config/notation/plugins/azure-kv notation-azure-kv
          notation plugin ls
       
      - 
        name: Login to Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_GITHUB_CREDS }}
       
      -
        name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: travisjregistry.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
      
      - 
        name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      -
        name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }} 
          tags: ${{ steps.meta.outputs.tags }}
          
      -
        name: Get signing cert ID
        id: akv-cert
        uses: Azure/cli@v1
        with:
          inlineScript: 
            KEY_ID=$(az keyvault certificate show -n travisj-testcert --vault-name travisj-kv --query 'kid' -o tsv)
            echo $KEY_ID
            echo "KEY_ID=$KEY_ID" >> $GITHUB_OUTPUT
          
      -
        name: Configure AKV plugin for notation
        run: |
          notation key add --name travisj-testcert --plugin azure-kv --id ${{ steps.akv-cert.outputs.KEY_ID }}
          notation key ls
      
      - 
        name: Generate SBOM
        run: |
          curl -Lo $RUNNER_TEMP/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
          chmod +x $RUNNER_TEMP/sbom-tool
          $RUNNER_TEMP/sbom-tool generate -BuildDropPath . -BuildComponentPath . -PackageName MyPackage -PackageVersion 1.0.0 -PackageSupplier TravisJCo -NamespaceUriBase https://sbom.mycompany.com -V Verbose

      - 
        name: Oras Attach SBOM
        run: |
          oras attach ${{ steps.meta.outputs.tags }} _manifest/spdx_2.2/manifest.spdx.json --artifact-type application/spdx+json

      
      - 
        name: Publish the SBOM for notarization later
        uses: actions/upload-artifact@v3.1.1
        with:
          path: ./_manifest/spdx_2.2/manifest.spdx.json

      

# This step needs to be performed on a Windows machine. 
# i.e., separate job, prepare WinSDK, download the published artifact from prior step
#     - 
#       name: Sign files with Azure Code Signing
#       uses: azure/azure-code-signing
#       with:
#         azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }} 
#         azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
#         azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
#         endpoint: https://wus2.codesigning.azure.net/
#         code-signing-account-name: scitt-test-codesigning
#         certificate-profile-name: scitt-test-certificate-profile
#         files-folder: .
#         files-folder-filter: json
#         file-digest: SHA256

